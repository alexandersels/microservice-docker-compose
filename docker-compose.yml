version: "3.7"
services:

  db:
    image: mysql:5.7
    container_name: sql_db
    ports:
      - 3307:3306
    environment:
      MYSQL_DATABASE: test
      MYSQL_USER: admin
      MYSQL_PASSWORD: test123
      MYSQL_ROOT_PASSWORD: test123
    volumes:
      - db-data:/var/lib/mysql
    restart: always
    networks:
      - backend

  discovery-service:
    image: discovery-service:latest
    container_name: discovery-service
    ports:
      - 8761:8761
    depends_on:
      - db
    restart: always
    networks:
      - backend

  api-gateway:
    image: api-gateway:latest
    container_name: api-gateway
    environment:
      eureka.server: http://discovery-service:8761/eureka
      gateway.user-service: http://user-service:8081/
      gateway.product-service: http://product-service:8082/
      connection.url: jdbc:mysql://db:3306/test
      connection.username: admin
      connection.password: test123
      connection.driver: com.mysql.jdbc.Driver
    ports:
      - 9000:8080
    depends_on:
      - discovery-service
    networks:
      - backend

  user-service:
    image: user-service:latest
    container_name: user-service
    environment:
      eureka.server: http://discovery-service:8761/eureka
      connection.url: jdbc:mysql://db:3306/test
      connection.username: admin
      connection.password: test123
      connection.driver: com.mysql.jdbc.Driver
    expose:
      - 8081
    depends_on:
      - api-gateway
    networks:
      - backend

  product-service:
    image: product-service:latest
    container_name: product-service
    environment:
      eureka.server: http://discovery-service:8761/eureka
      connection.url: jdbc:mysql://db:3306/test
      connection.username: admin
      connection.password: test123
      connection.driver: com.mysql.jdbc.Driver
    expose:
      - 8082
    depends_on:
      - api-gateway
    networks:
      - backend

  client:
    image: frontend:latest
    container_name: client
    ports:
      - 8080:80
    depends_on:
      - discovery-service
    networks:
      - frontend

volumes:
  db-data:

networks:
  frontend:
  backend: